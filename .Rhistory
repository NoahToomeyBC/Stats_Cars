setwd("C:/Users/noaht/Desktop/Git/Stats_Cars")
library(dplyr)
read.csv('resources/MechaCar_mpg.csv')
car.mpg.df <- read.csv('resources/MechaCar_mpg.csv')
car.mpg.df <- read.csv('resources/MechaCar_mpg.csv')
head(car.mpg.df)
?lm()
linear.model <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = car.mpg.df)
linear.model <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = car.mpg.df) # create linear model
summary(linear.model)
suspension <- read.csv('resources/Suspension_Coil.csv')
suspension <- read.csv('resources/Suspension_Coil.csv')
suspension.table <- tbl(suspension)
suspension <- tbl('resources/Suspension_Coil.csv')
suspension <- read.csv('resources/Suspension_Coil.csv')
suspension <- read.csv('resources/Suspension_Coil.csv')
summary(suspension)
suspension <- read.csv('resources/Suspension_Coil.csv')
summarize(suspension)
summarise(total.summary)
suspension <- read.csv('resources/Suspension_Coil.csv')
total.summary <-summary(suspension)
summarise(total.summary)
total.summary
suspension <- read.csv('resources/Suspension_Coil.csv')
total_summary <- suspension_coil_df %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
total_summary <- suspension %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
head(total.summary)
suspension.df <- read.csv('resources/Suspension_Coil.csv')
summarize(suspension.df)
?summarize()
total.summary <- suspension.df %>% summarise(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
head(total.summary)
suspension.df <- read.csv('resources/Suspension_Coil.csv')
total.summary <- suspension.df %>% summarise(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
lot.summary <- suspension.df %>% groupby(Manufacturing_Lot) %>% summarise(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
suspension.df <- read.csv('resources/Suspension_Coil.csv')
total.summary <- suspension.df %>% summarise(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
lot.summary <- suspension.df %>% group_by(Manufacturing_Lot) %>% summarise(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
head(lot.summary)
suspension.df <- read.csv('resources/Suspension_Coil.csv')
total.summary <- suspension.df %>% summarise(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
lot.summary <- suspension.df %>% group_by(Manufacturing_Lot) %>% summarise(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
head(total.summary)
head(lot.summary)
?t.test()
total.test <- t.test(suspension.df$PSI, mu=1500)
total.test
# T Test Lot 1
lot.one.t <- t.test(subset(suspension.df, Manufacturing_Lot="Lot1")$PSI, mu=1500)
lot.one.t
```{r}
# T Test Lot 2
lot.two.t <- t.test(subset(suspension.df, Manufacturing_Lot="Lot2")$PSI, mu=1500)
lot.two.t
# T Test Lot 3
lot.three.t <- t.test(subset(suspension.df, Manufacturing_Lot="Lot3")$PSI, mu=1500)
lot.three.t
linear.model <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = car.mpg.df) # create linear model
summary(linear.model)
suspension.df <- read.csv('resources/Suspension_Coil.csv')
total.summary <- suspension.df %>% summarise(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
library(dplyr) # Load in dplyr
car.mpg.df <- read.csv('resources/MechaCar_mpg.csv') # Create dataframe for mechacar csv
head(car.mpg.df)
linear.model <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = car.mpg.df) # create linear model
summary(linear.model)
suspension.df <- read.csv('resources/Suspension_Coil.csv')
total.summary <- suspension.df %>% summarise(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
lot.summary <- suspension.df %>% group_by(Manufacturing_Lot) %>% summarise(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI))
head(total.summary)
head(lot.summary)
#Total T Test
total.test <- t.test(suspension.df$PSI, mu=1500)
total_test
# T Test Lot 1
lot.one.t <- t.test(subset(suspension.df, Manufacturing_Lot="Lot1")$PSI, mu=1500) # For some reason this line isn't showing in html view
lot.one.t
linear.model <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = car.mpg.df) # create linear model
summary(linear.model)
plt <- ggplot(car.mpg.df, aes(x=mpg, y= vehicle_length, vehicle_weight, spoiler_angle, ground_clearance, awd))
library(dplyr) # Load in dplyr
library(ggplot2)
plt <- ggplot(car.mpg.df, aes(x=mpg, y= vehicle_length, vehicle_weight, spoiler_angle, ground_clearance, awd))
plt <- ggplot(car.mpg.df, aes(x=mpg, y= vehicle_length, vehicle_weight, spoiler_angle, ground_clearance, awd))
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
plt <- ggplot(car.mpg.df, aes(x=mpg, y= vehicle_length, vehicle_weight, spoiler_angle, ground_clearance, awd))
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= vehicle_length, vehicle_weight, spoiler_angle, ground_clearance, awd))
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= vehicle_length))
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
car.mpg.df <- read.csv('resources/MechaCar_mpg.csv') # Create dataframe for mechacar csv
head(car.mpg.df)
linear.model <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = car.mpg.df) # create linear model
summary(linear.model)
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= vehicle_length))
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients$vehicle_length['(Intercept)']
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$vehicle_length$coefficients['(Intercept)']
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$vehicle_length$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= vehicle_length))
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= vehicle_length))
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
plt + geom_point() + scale_y_continuous(limits=c(0,2000)) + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
plt + geom_point() + scale_y_continuous(limits=c(0,300)) + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
plt + geom_point() + scale_y_continuous(limits=c(0,2000)) + scale_x_continuous(0,2000) + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= vehicle_length))
plt + geom_point() + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= vehicle_length))
plt + geom_point() + scale_y_continuous(limits=c(100,300)) geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
plt + geom_point() + scale_y_continuous(limits=c(100,300)) + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
plt + geom_point() + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
plt + geom_point() + geom_smooth(method="lm", se=FALSE) + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
fig1 <- plt + geom_point() + geom_smooth(method="lm", se=FALSE)   #plot scatter and linear model
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= vehicle_length))
fig1 <- plt + geom_point() + geom_smooth(method="lm", se=FALSE)   #plot scatter and linear model
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= vehicle_length))
fig1 <- plt + geom_point() + geom_smooth(method="lm", se=FALSE) + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= vehicle_length))
fig1 <- plt + geom_point() + geom_smooth(method="lm", se=FALSE) + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt + geom_point() + geom_smooth(method="lm", se=FALSE) + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
mpg_lm(car.mpg.df$vehicle_weight)
mpg_lm <- function(y.var){
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= y_var))
plt + geom_point() + geom_smooth(method="lm", se=FALSE) + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
}
mpg_lm(car.mpg.df$vehicle_weight)
mpg_lm(car.mpg.df$vehicle_weight)
plt <- ggplot(car.mpg.df, aes(x=mpg, y= y.var))
mpg_lm <- function(y.var){
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= y.var))
plt + geom_point() + geom_smooth(method="lm", se=FALSE) + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
}
mpg_lm(car.mpg.df$vehicle_weight)
mpg_lm <- function(y.var){
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= y.var))
plt + geom_point() + geom_smooth(method="lm", se=FALSE) + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
}
mpg_lm(car.mpg.df$vehicle_weight)
mpg_lm(car.mpg.df$vehicle_length)
plt + geom_point() + geom_smooth(method="lm") + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
mpg_lm <- function(y.var){
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= y.var))
plt + geom_point() + geom_smooth(method="lm") + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
}
mpg_lm(car.mpg.df$vehicle_weight)
mpg_lm(car.mpg.df$vehicle_length)
mpg_lm <- function(y.var){
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= y.var))
plt + geom_point() + geom_smooth(method="lm", se=FALSE) + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
}
mpg_lm(car.mpg.df$vehicle_weight)
mpg_lm(car.mpg.df$vehicle_length)
mpg_lm(car.mpg.df$AWD)
mpg_lm <- function(y.var){
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= y.var))
plt + geom_point() + geom_smooth(method="lm", se=FALSE) + geom_line(aes(y=yvals), color = "red")  #plot scatter and linear model
}
mpg_lm(car.mpg.df$vehicle_weight)
mpg_lm(car.mpg.df$vehicle_length)
mpg_lm(car.mpg.df$spoiler_angle)
mpg_lm(car.mpg.df$ground_clearance)
mpg_lm(car.mpg.df$AWD)
$ggplot()
?ggplot()
plt + geom_point() + geom_smooth(method="lm", se=FALSE) + geom_line(aes(y=yvals), color = "red") + ylab(y.var) #plot scatter and linear model
plt + labs(y=y.var) + geom_point() + geom_smooth(method="lm", se=FALSE) + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
mpg_lm <- function(y.var){
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= y.var))
plt + labs(y=y.var) + geom_point() + geom_smooth(method="lm", se=FALSE) + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
}
mpg_lm(car.mpg.df$vehicle_weight)
mpg_lm(car.mpg.df$vehicle_length)
mpg_lm(car.mpg.df$spoiler_angle)
mpg_lm(car.mpg.df$ground_clearance)
mpg_lm(car.mpg.df$AWD)
plt + labs(y=y.var) + geom_point() + geom_smooth(method="lm", se=FALSE, col=red) + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
mpg_lm <- function(y.var){
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= y.var))
plt + labs(y=y.var) + geom_point() + geom_smooth(method="lm", se=FALSE, col=red) + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
}
mpg_lm(car.mpg.df$vehicle_weight)
plt + labs(y=y.var) + geom_point() + geom_smooth(method="lm", se=FALSE, col="red") + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
mpg_lm <- function(y.var){
yvals <- linear.model$coefficients['mpg']*car.mpg.df$mpg +
linear.model$coefficients['(Intercept)']
plt <- ggplot(car.mpg.df, aes(x=mpg, y= y.var))
plt + labs(y=y.var) + geom_point() + geom_smooth(method="lm", se=FALSE, col="red") + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
}
mpg_lm(car.mpg.df$vehicle_weight)
mpg_lm(car.mpg.df$vehicle_length)
mpg_lm(car.mpg.df$spoiler_angle)
mpg_lm(car.mpg.df$ground_clearance)
mpg_lm(car.mpg.df$AWD)
linemodel <- lm(mpg ~ vehicle_length, data=car.mpg.df)
summary(linemodel)
summary(linear.model)
#Total T Test
total.test <- t.test(suspension.df$PSI, mu=1500)
total_test
#Total T Test
total.test <- t.test(suspension.df$PSI, mu=1500)
total.test
# T Test Lot 1
lot.one.t <- t.test(subset(suspension.df, Manufacturing_Lot=="Lot1")$PSI, mu=1500) # For some reason this line isn't showing in html view
lot.one.t
# T Test Lot 2
lot.two.t <- t.test(subset(suspension.df, Manufacturing_Lot=="Lot2")$PSI, mu=1500)
lot.two.t
# T Test Lot 3
lot.three.t <- t.test(subset(suspension.df, Manufacturing_Lot=="Lot3")$PSI, mu=1500)
lot.three.t
